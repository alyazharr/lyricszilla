image: gradle:7.4-jdk11

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

stages:
  - build
  - test
  - deploy

build:
  stage: build
  script:
    - gradle assemble
  artifacts:
    paths:
      - build/libs/*.jar
    expire_in: 1 week

test:
  stage: test
  script:
      - gradle check
      - gradle test
      - gradle jacocoTestReport
      - cat build/reports/jacoco/test/html/index.html
  coverage: '/Total.*?([0-9]{1,3})%/'
  artifacts:
    paths:
      - build/reports/jacoco/*
    expire_in: 1 week

sonarqube-check:
  stage : test
  image: gradle:7.4
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: gradle sonarqube -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN -Dsonar.qualitygate.wait=true
  allow_failure: true
  only:
    - master
    - staging
    - feature/wordsblank
    - feature/lyricspatch

.deployment: &deployment_definition
    stage: deploy
    image: ruby:latest
    before_script:
      - gem install dpl
      - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
    script:
      - dpl --provider=heroku
        --app=$HEROKU_APP_NAME
        --api-key=$HEROKU_API_KEY
      - export HEROKU_API_KEY=$HEROKU_API_KEY
      - heroku run --app $HEROKU_APP_NAME migrate

deploy_staging:
  <<: *deployment_definition
  only:
    - staging

deploy_production:
  <<: *deployment_definition
  only:
    - master